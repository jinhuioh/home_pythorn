# 문제
# 준규가 가지고 있는 동전은 총 N종류이고, 각각의 동전을 매우 많이 가지고 있다.
#
# 동전을 적절히 사용해서 그 가치의 합을 K로 만들려고 한다. 이때 필요한 동전 개수의 최솟값을 구하는 프로그램을 작성하시오.
#
# 입력
# 첫째 줄에 N과 K가 주어진다. (1 ≤ N ≤ 10, 1 ≤ K ≤ 100,000,000)
#
# 둘째 줄부터 N개의 줄에 동전의 가치 Ai가 오름차순으로 주어진다. (1 ≤ Ai ≤ 1,000,000, A1 = 1, i ≥ 2인 경우에 Ai는 Ai-1의 배수)
#
# 출력
# 첫째 줄에 K원을 만드는데 필요한 동전 개수의 최솟값을 출력한다.

# 예제 입력 1
# 10 4200
# 1
# 5
# 10
# 50
# 100
# 500
# 1000
# 5000
# 10000
# 50000
# 예제 출력 1
# 6

#9시 3분

n,k = map(int, input().split())
money = []
for i in range(n):
    money.append(int(input()))
#큰 값부터 차례대로 sort
money.sort(reverse=True)

def coin(k,money):
    #최소 동전개수를 셀 초기값
    result = 0
    # 큰 값부터 꺼내서 연산
    for i in money:
        if k == 0:
            print(result)
            break
        # 거스름돈 값(k)이 나누는 값보다 큰 경우
        if k >= i:
            result = result + (k//i)#나눈 몫이 result
            
            # 해당 동전으로 거스름돈을 나누고 나머지만 k에 다시 넣어준다.
            # 예를들어 4200원을 1000원으로 나누면 k=200이 됨
            k = k % i
        # i=1인 경우 나누기 나머지 연산이 의미가 없으므로 남은 k를 result에 더해준다.
        if i == 1:
            result += k
            #결과값 출력
            print(result)
coin(k,money)

# 10 4792
# 1
# 5
# 10
# 50
# 100
# 500
# 1000
# 5000
# 10000
# 50000